"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const StaticPageManager_1 = require("../StaticPageManager");
const yaml = require("js-yaml");
const marked = require("marked");
let MarkdownPageParser = class MarkdownPageParser {
    parsePage(page, directory, filePath) {
        const matchStart = /---(\r\n|\r|\n)/.exec(page);
        const matchEnd = /(\r\n|\r|\n)---(\r\n|\r|\n)/.exec(page);
        if (matchStart && matchEnd) {
            const propsString = page.substring(matchStart.index + matchStart[0].length, matchEnd.index);
            const pageData = yaml.safeLoad(propsString);
            pageData.body = marked(page.substring(matchEnd.index + matchEnd[0].length));
            return pageData;
        }
        else {
            return { body: marked(page) };
        }
    }
};
MarkdownPageParser = __decorate([
    StaticPageManager_1.StaticPageParser('md')
], MarkdownPageParser);
exports.MarkdownPageParser = MarkdownPageParser;
//# sourceMappingURL=MarkdownPageParser.js.map