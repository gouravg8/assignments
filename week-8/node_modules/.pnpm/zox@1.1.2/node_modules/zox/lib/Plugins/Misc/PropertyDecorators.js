"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const PropertyDecoratorPluginManager_1 = require("../PluginManagers/PropertyDecoratorPluginManager");
const marked = require("marked");
let MarkdownPropertyDecorator = class MarkdownPropertyDecorator {
    decorate(property) {
        if (Array.isArray(property)) {
            for (let i = 0; i < property.length; ++i) {
                property[i] = marked(property[i]);
            }
            return property;
        }
        else {
            return marked(property);
        }
    }
};
MarkdownPropertyDecorator = __decorate([
    PropertyDecoratorPluginManager_1.PropertyDecorator('md')
], MarkdownPropertyDecorator);
exports.MarkdownPropertyDecorator = MarkdownPropertyDecorator;
let NL2BRPropertyDecorator = class NL2BRPropertyDecorator {
    decorate(property) {
        return property.replace(/(?:\r\n|\r|\n)/g, '<br>');
    }
};
NL2BRPropertyDecorator = __decorate([
    PropertyDecoratorPluginManager_1.PropertyDecorator('nl2br')
], NL2BRPropertyDecorator);
exports.NL2BRPropertyDecorator = NL2BRPropertyDecorator;
let UpperPropertyDecorator = class UpperPropertyDecorator {
    decorate(property) {
        return property.toUpperCase();
    }
};
UpperPropertyDecorator = __decorate([
    PropertyDecoratorPluginManager_1.PropertyDecorator('upper')
], UpperPropertyDecorator);
exports.UpperPropertyDecorator = UpperPropertyDecorator;
let LowerPropertyDecorator = class LowerPropertyDecorator {
    decorate(property) {
        return property.toLowerCase();
    }
};
LowerPropertyDecorator = __decorate([
    PropertyDecoratorPluginManager_1.PropertyDecorator('lower')
], LowerPropertyDecorator);
exports.LowerPropertyDecorator = LowerPropertyDecorator;
let DatePropertyDecorator = class DatePropertyDecorator {
    decorate(property) {
        return new Date(property);
    }
};
DatePropertyDecorator = __decorate([
    PropertyDecoratorPluginManager_1.PropertyDecorator('date')
], DatePropertyDecorator);
exports.DatePropertyDecorator = DatePropertyDecorator;
let SortPropertyDecorator = class SortPropertyDecorator {
    decorate(property) {
        property.order = property.order ? property.order.toUpperCase() : 'ASC';
        const orderAsc = property.order != 'DSC';
        return property.items.sort((a, b) => typeof a[property.sortBy] == 'string' ? (a[property.sortBy].localeCompare(b[property.sortBy]) * (orderAsc ? 1 : -1)) :
            orderAsc ?
                a[property.sortBy] - b[property.sortBy] :
                b[property.sortBy] - a[property.sortBy]);
    }
};
SortPropertyDecorator = __decorate([
    PropertyDecoratorPluginManager_1.PropertyDecorator('sort')
], SortPropertyDecorator);
exports.SortPropertyDecorator = SortPropertyDecorator;
let ReversePropertyDecorator = class ReversePropertyDecorator {
    decorate(property) {
        return property.reverse();
    }
};
ReversePropertyDecorator = __decorate([
    PropertyDecoratorPluginManager_1.PropertyDecorator('reverse')
], ReversePropertyDecorator);
exports.ReversePropertyDecorator = ReversePropertyDecorator;
//# sourceMappingURL=PropertyDecorators.js.map