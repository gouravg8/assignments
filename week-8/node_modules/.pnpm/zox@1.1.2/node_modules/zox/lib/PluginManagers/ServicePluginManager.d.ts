import { IService, IServiceContainer } from "../ServiceContainer";
import { Constructor } from "zox-plugins";
import { IPluginDiscoveryService } from "../Services/PluginDiscoveryService";
export declare abstract class IServicePluginManager implements IService {
    readonly serviceKey: symbol;
    abstract registerServices(forceResolve?: boolean): void;
    abstract forceResolveServices(): void;
}
export declare class ServicePluginManager extends IServicePluginManager {
    protected container: IServiceContainer;
    protected pluginDiscovery: IPluginDiscoveryService;
    registerServices(forceResolve?: boolean): void;
    forceResolveServices(): void;
}
export declare const Service: (pluginClass: Constructor<IService>) => void;
