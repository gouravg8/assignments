/// <reference types="node" />
import { IncomingMessage } from "http";
import * as WebSocket from "ws";
import { ParsedUrlQuery } from "querystring";
import { RouteParams } from "./RoutingUtility";
export interface IWebSocketController {
    params?: RouteParams;
    query: ParsedUrlQuery;
    request: IncomingMessage;
    ws: WebSocket;
    validate?(request: IncomingMessage): boolean;
    handle(request: IncomingMessage, ws: WebSocket): void;
}
export declare abstract class WebSocketController implements IWebSocketController {
    params?: RouteParams;
    query: ParsedUrlQuery;
    request: IncomingMessage;
    ws: WebSocket;
    handle(request: IncomingMessage, ws: WebSocket): void;
    protected abstract init(): void;
    protected abstract onMessage(data: WebSocket.Data): void;
    protected queryStr(key: string): string;
    protected hasQuery(key: string): boolean;
    protected send(data?: any): void;
}
