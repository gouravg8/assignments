"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const fs = require("fs");
const mime = require("mime");
class FileResponse {
    constructor(file, inline = false, statusCode = 200, headers, setContentDisposition) {
        this.file = file;
        this.inline = inline;
        this.statusCode = statusCode;
        this.headers = typeof headers == 'object' ? headers : undefined;
        this.setContentDisposition = setContentDisposition != false;
    }
    send(response) {
        if (typeof this.file === 'string') {
            fs.stat(this.file, (err, stats) => {
                if (err) {
                    console.log('File not found', this.file);
                    response.writeHead(404);
                    response.end();
                }
                else {
                    this.sendFile(response, { filePath: this.file, stats });
                }
            });
        }
        else {
            this.sendFile(response, this.file);
        }
    }
    sendFile(response, file) {
        const mimeType = mime.getType(file.filePath);
        const headers = {
            'Content-Type': mimeType,
            'Content-Length': file.stats.size,
        };
        if (this.setContentDisposition) {
            headers['Content-Disposition'] =
                `${(this.inline ? 'inline' : 'attachment')}; filename="${path.basename(file.filePath)}"`;
        }
        response.writeHead(this.statusCode, Object.assign(headers, this.headers));
        const readStream = fs.createReadStream(file.filePath);
        readStream.pipe(response);
    }
}
exports.FileResponse = FileResponse;
//# sourceMappingURL=FileResponse.js.map